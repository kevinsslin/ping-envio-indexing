# Token entity - Global token statistics (singleton per chain)
type Token {
  id: ID! # chainId_tokenAddress
  chainId: BigInt!
  address: String!
  symbol: String!
  name: String!
  decimals: BigInt!
  totalSupply: BigInt!

  # Volume and transaction stats
  totalTransfers: BigInt!
  totalVolume: BigDecimal!

  # Account stats
  holderCount: BigInt! # Number of unique holders
}

# Account entity - Tracks individual user balances and activity
type Account {
  id: ID! # chainId_accountAddress
  chainId: BigInt!
  address: String!

  # Balance
  balance: BigDecimal!

  # Activity stats
  totalSent: BigDecimal!
  totalReceived: BigDecimal!
  transferCount: BigInt!

  # Timestamps
  firstTransferAt: BigInt!
  lastTransferAt: BigInt!
  lastTransferHash: String!

  # Buy/Sell tracking (pool interactions)
  lastBuyAt: BigInt # Last time bought from pool
  lastBuyHash: String # Transaction hash of last buy
  lastSellAt: BigInt # Last time sold to pool
  lastSellHash: String # Transaction hash of last sell

  totalBuys: BigInt! # Total number of buys from pools
  totalSells: BigInt! # Total number of sells to pools
  totalBuyVolume: BigDecimal! # Total volume bought from pools
  totalSellVolume: BigDecimal! # Total volume sold to pools

  # Derived fields
  sentTransfers: [Transfer!]! @derivedFrom(field: "from")
  receivedTransfers: [Transfer!]! @derivedFrom(field: "to")
}

# Transfer entity - Individual transfer records
type Transfer @index(fields: ["timestamp", "isPoolRelated"]) {
  id: ID! # chainId_blockNumber_logIndex
  chainId: BigInt!
  transactionHash: String!
  timestamp: BigInt! @index
  blockNumber: BigInt!
  logIndex: BigInt!

  # Transfer details
  from: Account!
  to: Account!
  value: BigDecimal!

  # Pool relation
  isPoolRelated: Boolean! # True if from or to is a Pool address
  poolRelatedType: String # "BUY" (from pool), "SELL" (to pool), or "NONE"
  relatedPool: Pool # The pool involved in this transfer (if any)
}

# Pool entity - Uniswap V3 Pool statistics
type Pool {
  id: ID! # chainId_poolAddress
  chainId: BigInt!
  address: String!

  # Pool info
  token0: String! # Token address
  token1: String! # Token address
  feeTier: BigInt!
  tickSpacing: BigInt!

  # Current state
  liquidity: BigInt! @index # For filtering pools by liquidity
  sqrtPriceX96: BigInt!
  tick: BigInt!

  # Status
  isActive: Boolean! # Has sufficient liquidity (>0)

  # Volume stats
  volumeToken0: BigDecimal!
  volumeToken1: BigDecimal!
  txCount: BigInt! @index

  # TVL
  totalValueLockedToken0: BigDecimal!
  totalValueLockedToken1: BigDecimal!

  # Timestamps
  createdAt: BigInt!
  createdAtBlock: BigInt!
  lastSwapAt: BigInt!

  # Derived fields
  swaps: [Swap!]! @derivedFrom(field: "pool")
  transfers: [Transfer!]! @derivedFrom(field: "relatedPool")
}

# Swap entity - Individual swap records
type Swap @index(fields: ["timestamp", "pool"]) {
  id: ID! # chainId_blockNumber_logIndex
  chainId: BigInt!
  transactionHash: String!
  timestamp: BigInt! @index
  blockNumber: BigInt!
  logIndex: BigInt!

  # Swap details
  pool: Pool!
  sender: String!
  recipient: String!

  # Amounts (can be negative in V3)
  amount0: BigDecimal!
  amount1: BigDecimal!

  # Pool state after swap
  sqrtPriceX96: BigInt!
  liquidity: BigInt!
  tick: BigInt!
}

# DailyTokenActivity - Daily aggregated token statistics
type DailyTokenActivity {
  id: ID! # chainId_date (YYYY-MM-DD)
  chainId: BigInt!
  date: String! # YYYY-MM-DD format
  timestamp: BigInt! # Start of day timestamp

  # Transfer stats
  dailyTransfers: BigInt!
  dailyVolume: BigDecimal!

  # Account activity
  dailyActiveAccounts: BigInt! # Unique addresses that sent or received
  newAccounts: BigInt! # New addresses that received their first tokens
}

# DailyPoolActivity - Daily aggregated pool statistics
type DailyPoolActivity {
  id: ID! # chainId_poolAddress_date
  chainId: BigInt!
  pool: String! # Pool address
  date: String! # YYYY-MM-DD format
  timestamp: BigInt! # Start of day timestamp

  # Swap stats
  dailySwaps: BigInt!
  dailyVolumeToken0: BigDecimal!
  dailyVolumeToken1: BigDecimal!

  # Liquidity snapshots
  liquidityStart: BigInt! # Liquidity at start of day
  liquidityEnd: BigInt! # Liquidity at end of day

  # Price snapshots
  sqrtPriceX96Start: BigInt!
  sqrtPriceX96End: BigInt!
}
